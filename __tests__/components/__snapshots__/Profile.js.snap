exports[`test renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "aliceblue",
      "flex": 1,
      "flexDirection": "column",
    }
  }>
  <TextInput
    onChangeText={[Function]}
    placeholder="Summoner Name"
    style={
      Object {
        "backgroundColor": "white",
        "elevation": 3,
        "height": 40,
      }
    }
    value="Test" />
  <ScrollView>
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "column",
          "padding": 20,
        }
      }>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "elevation": 3,
            "flex": 1,
            "justifyContent": "center",
            "padding": 20,
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "dodgerblue",
                "fontSize": 60,
              },
              undefined,
              Object {
                "fontFamily": "Entypo",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }>
          ï„–
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 13,
              "textAlign": "center",
            }
          }>
          Search your summoner to gather information about your games!
        </Text>
      </View>
    </View>
  </ScrollView>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Array [
          Object {},
        ]
      }>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
            Object {
              "color": "dodgerblue",
            },
          ]
        }>
        Check Summoner
      </Text>
    </View>
  </View>
</View>
`;
